<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0">

<channel>
	<title>SpringSource Team Blog</title>
	
	<link>http://blog.springsource.org</link>
	<description>The voice of SpringSource</description>
	<lastBuildDate>Mon, 14 May 2012 02:47:45 +0000</lastBuildDate>
	<language>en</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=3.1.1</generator>
		<atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/SpringSourceTeamBlog" /><feedburner:info uri="springsourceteamblog" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><item>
		<title>Spring MVC 3.2 Preview: Adding Long Polling to an Existing Web Application</title>
		<link>http://feedproxy.google.com/~r/SpringSourceTeamBlog/~3/IPfo9uFNZNM/</link>
		<comments>http://blog.springsource.org/2012/05/13/spring-mvc-3-2-preview-adding-long-polling-to-an-existing-web-application/#comments</comments>
		<pubDate>Mon, 14 May 2012 02:24:20 +0000</pubDate>
		<dc:creator>Rossen Stoyanchev</dc:creator>
				<category><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=11038</guid>
		<description>In my last post I discussed how to make a Spring MVC controller method asynchronous by returning a Callable which is then invoked in a separate thread by Spring MVC. But what if async processing depended on receiving an external event that will take place in a thread outside the control of the current request  &lt;a href="http://blog.springsource.org/2012/05/13/spring-mvc-3-2-preview-adding-long-polling-to-an-existing-web-application/"&gt;&lt;em&gt;Read more...&lt;/em&gt;&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/SpringSourceTeamBlog/~4/IPfo9uFNZNM" height="1" width="1"/&gt;</description>
		<wfw:commentRss>http://blog.springsource.org/2012/05/13/spring-mvc-3-2-preview-adding-long-polling-to-an-existing-web-application/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<feedburner:origLink>http://blog.springsource.org/2012/05/13/spring-mvc-3-2-preview-adding-long-polling-to-an-existing-web-application/</feedburner:origLink></item>
		<item>
		<title>Spring MVC 3.2 Preview: Making a Controller Method Asynchronous</title>
		<link>http://feedproxy.google.com/~r/SpringSourceTeamBlog/~3/byf7YG9xtx0/</link>
		<comments>http://blog.springsource.org/2012/05/10/spring-mvc-3-2-preview-making-a-controller-method-asynchronous/#comments</comments>
		<pubDate>Thu, 10 May 2012 18:16:06 +0000</pubDate>
		<dc:creator>Rossen Stoyanchev</dc:creator>
				<category><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=11032</guid>
		<description>In previous posts I introduced the Servlet 3, async support feature in Spring MVC 3.2 M1 and provided background on techniques for real-time updates. In today&amp;#039;s post I&amp;#039;ll turn to the technical details of the new Spring MVC feature and its impact on various aspects of the Spring MVC request lifecycle. To make any existing  &lt;a href="http://blog.springsource.org/2012/05/10/spring-mvc-3-2-preview-making-a-controller-method-asynchronous/"&gt;&lt;em&gt;Read more...&lt;/em&gt;&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/SpringSourceTeamBlog/~4/byf7YG9xtx0" height="1" width="1"/&gt;</description>
		<wfw:commentRss>http://blog.springsource.org/2012/05/10/spring-mvc-3-2-preview-making-a-controller-method-asynchronous/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		<feedburner:origLink>http://blog.springsource.org/2012/05/10/spring-mvc-3-2-preview-making-a-controller-method-asynchronous/</feedburner:origLink></item>
		<item>
		<title>Using Cloud Foundry Workers with Spring</title>
		<link>http://feedproxy.google.com/~r/SpringSourceTeamBlog/~3/IujAOH-IJ4M/</link>
		<comments>http://blog.springsource.org/2012/05/09/using-cloud-foundry-workers-with-spring/#comments</comments>
		<pubDate>Wed, 09 May 2012 16:33:09 +0000</pubDate>
		<dc:creator>Josh Long</dc:creator>
				<category><![CDATA[Cloud Computing]]></category>
		<category><![CDATA[Enterprise Integration]]></category>
		<category><![CDATA[Spring]]></category>
		<category><![CDATA[Spring Integration]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=11074</guid>
		<description>You&amp;#039;ve no doubt read Jennifer Hickey&amp;#039;s amazing blog posts introducing Cloud Foundry workers, their application in setting up Ruby Resque background jobs, and today&amp;#039;s post introducing the Spring support. Key Takeaways for Spring Developers You need to update your version of vmc with gem update vmc. Cloud Foundry workers let you run public static void  &lt;a href="http://blog.springsource.org/2012/05/09/using-cloud-foundry-workers-with-spring/"&gt;&lt;em&gt;Read more...&lt;/em&gt;&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/SpringSourceTeamBlog/~4/IujAOH-IJ4M" height="1" width="1"/&gt;</description>
		<wfw:commentRss>http://blog.springsource.org/2012/05/09/using-cloud-foundry-workers-with-spring/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		<feedburner:origLink>http://blog.springsource.org/2012/05/09/using-cloud-foundry-workers-with-spring/</feedburner:origLink></item>
		<item>
		<title>Spring MVC 3.2 Preview: Techniques for Real-time Updates</title>
		<link>http://feedproxy.google.com/~r/SpringSourceTeamBlog/~3/phluBNkTYeE/</link>
		<comments>http://blog.springsource.org/2012/05/08/spring-mvc-3-2-preview-techniques-for-real-time-updates/#comments</comments>
		<pubDate>Tue, 08 May 2012 16:36:04 +0000</pubDate>
		<dc:creator>Rossen Stoyanchev</dc:creator>
				<category><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=11022</guid>
		<description>In my last post I introduced the new Servlet 3, async support feature in Spring MVC 3.2 M1 in the context of long-running requests. A second very important motivation for async processing is the need for browsers to receive real-time updates. Examples include chatting in a browser, stock quotes, status updates, live sports results, and  &lt;a href="http://blog.springsource.org/2012/05/08/spring-mvc-3-2-preview-techniques-for-real-time-updates/"&gt;&lt;em&gt;Read more...&lt;/em&gt;&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/SpringSourceTeamBlog/~4/phluBNkTYeE" height="1" width="1"/&gt;</description>
		<wfw:commentRss>http://blog.springsource.org/2012/05/08/spring-mvc-3-2-preview-techniques-for-real-time-updates/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		<feedburner:origLink>http://blog.springsource.org/2012/05/08/spring-mvc-3-2-preview-techniques-for-real-time-updates/</feedburner:origLink></item>
		<item>
		<title>Spring MVC 3.2 Preview: Introducing Servlet 3, Async Support</title>
		<link>http://feedproxy.google.com/~r/SpringSourceTeamBlog/~3/699xI0Epv_Q/</link>
		<comments>http://blog.springsource.org/2012/05/06/spring-mvc-3-2-preview-introducing-servlet-3-async-support/#comments</comments>
		<pubDate>Mon, 07 May 2012 02:36:35 +0000</pubDate>
		<dc:creator>Rossen Stoyanchev</dc:creator>
				<category><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=11016</guid>
		<description>Overview Spring MVC 3.2 M1 will introduce asynchronous request processing support based on Servlet 3.0. This is the first of several blog posts covering the new feature, providing along the way sufficient background and context to understand how and why you might want to take advantage of it. A major goal of any milestone release  &lt;a href="http://blog.springsource.org/2012/05/06/spring-mvc-3-2-preview-introducing-servlet-3-async-support/"&gt;&lt;em&gt;Read more...&lt;/em&gt;&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/SpringSourceTeamBlog/~4/699xI0Epv_Q" height="1" width="1"/&gt;</description>
		<wfw:commentRss>http://blog.springsource.org/2012/05/06/spring-mvc-3-2-preview-introducing-servlet-3-async-support/feed/</wfw:commentRss>
		<slash:comments>17</slash:comments>
		<feedburner:origLink>http://blog.springsource.org/2012/05/06/spring-mvc-3-2-preview-introducing-servlet-3-async-support/</feedburner:origLink></item>
		<item>
		<title>Create Spring Integration Projects using STS</title>
		<link>http://feedproxy.google.com/~r/SpringSourceTeamBlog/~3/RbecbN8LB6Q/</link>
		<comments>http://blog.springsource.org/2012/04/09/create-spring-integration-projects-using-sts/#comments</comments>
		<pubDate>Mon, 09 Apr 2012 16:46:24 +0000</pubDate>
		<dc:creator>Gunnar Hillert</dc:creator>
				<category><![CDATA[Enterprise Integration]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[Spring]]></category>
		<category><![CDATA[Spring Integration]]></category>
		<category><![CDATA[Tools]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[SpringSource Tool Suite]]></category>
		<category><![CDATA[STS]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=10672</guid>
		<description>Just days ago, SpringSource Tool Suite™ (STS) 2.9.1 was released. Besides many new features, it provides several features that are especially exciting for Spring Integration users. First of all, the latest STS release adds support for Spring Integration 2.1 and improves the visualization capabilities for Spring Integration flows. STS supports now all recently added Spring  &lt;a href="http://blog.springsource.org/2012/04/09/create-spring-integration-projects-using-sts/"&gt;&lt;em&gt;Read more...&lt;/em&gt;&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/SpringSourceTeamBlog/~4/RbecbN8LB6Q" height="1" width="1"/&gt;</description>
		<wfw:commentRss>http://blog.springsource.org/2012/04/09/create-spring-integration-projects-using-sts/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		<feedburner:origLink>http://blog.springsource.org/2012/04/09/create-spring-integration-projects-using-sts/</feedburner:origLink></item>
		<item>
		<title>Migrating to Spring 3.1 and Hibernate 4.1</title>
		<link>http://feedproxy.google.com/~r/SpringSourceTeamBlog/~3/ZxwuW5uqgR8/</link>
		<comments>http://blog.springsource.org/2012/04/06/migrating-to-spring-3-1-and-hibernate-4-1/#comments</comments>
		<pubDate>Fri, 06 Apr 2012 07:59:26 +0000</pubDate>
		<dc:creator>Michael Isvy</dc:creator>
				<category><![CDATA[3.1]]></category>
		<category><![CDATA[Spring]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=10766</guid>
		<description>As part of the Core-Spring course, we have a lab application that we use to show how to integrate Spring and JPA/Hibernate together. We have just upgraded it to Spring 3.1 / Hibernate 4.1, and thought we should share a few tips. 1) Maven Dependencies The configuration sample below is based on Maven (but you  &lt;a href="http://blog.springsource.org/2012/04/06/migrating-to-spring-3-1-and-hibernate-4-1/"&gt;&lt;em&gt;Read more...&lt;/em&gt;&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/SpringSourceTeamBlog/~4/ZxwuW5uqgR8" height="1" width="1"/&gt;</description>
		<wfw:commentRss>http://blog.springsource.org/2012/04/06/migrating-to-spring-3-1-and-hibernate-4-1/feed/</wfw:commentRss>
		<slash:comments>21</slash:comments>
		<feedburner:origLink>http://blog.springsource.org/2012/04/06/migrating-to-spring-3-1-and-hibernate-4-1/</feedburner:origLink></item>
		<item>
		<title>Secure Data Binding With Grails</title>
		<link>http://feedproxy.google.com/~r/SpringSourceTeamBlog/~3/uvbKBMTEqXA/</link>
		<comments>http://blog.springsource.org/2012/03/28/secure-data-binding-with-grails/#comments</comments>
		<pubDate>Wed, 28 Mar 2012 16:43:36 +0000</pubDate>
		<dc:creator>Jeff Brown</dc:creator>
				<category><![CDATA[Groovy/Grails]]></category>
		<category><![CDATA[Security]]></category>
		<category><![CDATA[Web]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=10734</guid>
		<description>Introduction The Grails Framework provides a lot of tools and techniques to web application developers to simplify solving common application development challenges. Among those are a number of things which simplify the complicated and tedious problems often associated with data binding. In general, data binding is made very simple by Grails as it offers several  &lt;a href="http://blog.springsource.org/2012/03/28/secure-data-binding-with-grails/"&gt;&lt;em&gt;Read more...&lt;/em&gt;&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/SpringSourceTeamBlog/~4/uvbKBMTEqXA" height="1" width="1"/&gt;</description>
		<wfw:commentRss>http://blog.springsource.org/2012/03/28/secure-data-binding-with-grails/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>
		<feedburner:origLink>http://blog.springsource.org/2012/03/28/secure-data-binding-with-grails/</feedburner:origLink></item>
		<item>
		<title>Early Access: SpringSource Tool Suite for Eclipse Juno (4.2)</title>
		<link>http://feedproxy.google.com/~r/SpringSourceTeamBlog/~3/c8_c5x5FA14/</link>
		<comments>http://blog.springsource.org/2012/03/14/early-access-springsource-tool-suite-for-eclipse-juno-4-2/#comments</comments>
		<pubDate>Wed, 14 Mar 2012 11:16:01 +0000</pubDate>
		<dc:creator>Martin Lippert</dc:creator>
				<category><![CDATA[Spring]]></category>
		<category><![CDATA[Tools]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=10708</guid>
		<description>Wanna use the SpringSource Tool Suite on the latest Eclipse Juno (4.2) milestone builds? Here you go:  How to install Download and install the latest: Eclipse Juno JEE milestone build Download the bookmarks.xml and import that to your list of update sites (Preferences -&amp;#62; Install/Update -&amp;#62; Available Update Sites -&amp;#62; Import). Go to &amp;#034;Install New Software&amp;#034; and  &lt;a href="http://blog.springsource.org/2012/03/14/early-access-springsource-tool-suite-for-eclipse-juno-4-2/"&gt;&lt;em&gt;Read more...&lt;/em&gt;&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/SpringSourceTeamBlog/~4/c8_c5x5FA14" height="1" width="1"/&gt;</description>
		<wfw:commentRss>http://blog.springsource.org/2012/03/14/early-access-springsource-tool-suite-for-eclipse-juno-4-2/feed/</wfw:commentRss>
		<slash:comments>18</slash:comments>
		<feedburner:origLink>http://blog.springsource.org/2012/03/14/early-access-springsource-tool-suite-for-eclipse-juno-4-2/</feedburner:origLink></item>
		<item>
		<title>Introducing Spring Integration Scala DSL</title>
		<link>http://feedproxy.google.com/~r/SpringSourceTeamBlog/~3/JLQnMABq7Z4/</link>
		<comments>http://blog.springsource.org/2012/03/05/introducing-spring-integration-scala-dsl/#comments</comments>
		<pubDate>Mon, 05 Mar 2012 07:11:22 +0000</pubDate>
		<dc:creator>Oleg Zhurakousky</dc:creator>
				<category><![CDATA[Scala]]></category>
		<category><![CDATA[Spring]]></category>
		<category><![CDATA[Spring Integration]]></category>

		<guid isPermaLink="false">http://blog.springsource.org/?p=10610</guid>
		<description>Introduction The Spring Integration team is happy to announce the first milestone release (1.0.0.M1) of the Spring Integration Scala DSL &amp;#8211; one of the newest additions to Spring Integration portfolio. What is the Spring Integration Scala DSL? The Spring Integration Scala DSL is a Domain Specific Language written in Scala with the goals of: providing  &lt;a href="http://blog.springsource.org/2012/03/05/introducing-spring-integration-scala-dsl/"&gt;&lt;em&gt;Read more...&lt;/em&gt;&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/SpringSourceTeamBlog/~4/JLQnMABq7Z4" height="1" width="1"/&gt;</description>
		<wfw:commentRss>http://blog.springsource.org/2012/03/05/introducing-spring-integration-scala-dsl/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
		<feedburner:origLink>http://blog.springsource.org/2012/03/05/introducing-spring-integration-scala-dsl/</feedburner:origLink></item>
	</channel>
</rss>
